const mainElement = document.querySelector('.main');

// ------------cart--------------
// const getTotalPrice2 = (cart) => {
//     let total = 0;
//     cart.forEach(item => {
//         total += item.price * item.quantity;
//     });
//     return total.toLocaleString();
// };

// const rederCart2 = () => {
//     const innerCartBox = document.querySelector(".inner-cart-box");

//     const cart = JSON.parse(localStorage.getItem("cart")) || [];

//     if (innerCartBox) {
//         if (cart.length > 0) {
//             const cartTemplate = `
//             <div class="inner-list-product">
//                 ${cart.map(item => `
//                 <div class="inner-item">
//                     <div class="inner-image">
//                         <a href="../dishDetails/?id=${item.id}">
//                             <img src=${item.image} alt='${item.name}' />
//                         </a>
//                     </div>
//                     <div class="inner-text">
//                         <h3 class="inner-name">
//                             <a href="../dishDetails/?id=${item.id}">${item.name}</a>
//                         </h3>
//                         <p class="inner-quantity">
//                             S·ªë l∆∞·ª£ng: ${item.quantity}
//                         </p>
//                     </div>
//                     <div class="inner-action">
//                         <p class="inner-price">
//                             ${(item.price * item.quantity).toLocaleString()}ƒë
//                         </p>
//                         <div class="inner-remove">
//                             <i class="fa-solid fa-trash"></i>
//                         </div>
//                     </div>
//                 </div>
//                 `).join('')}
//             </div>
//             <div class="inner-total">
//                 <p>
//                     <span>T·ªïng c·ªông:</span> 
//                     <span>${getTotalPrice2(cart)}ƒë</span>
//                 </p>
//                 <div class="inner-button">
//                     <div class="inner-button-checkout">
//                         Thanh to√°n
//                     </div>
//                 </div>
//             </div>
//             `;

//             innerCartBox.innerHTML = cartTemplate;
            
//         } else {
//             const cartTemplate = `
//             <div class="inner-empty">
//                 <p>Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</p>
//             </div>
//             `;

//             innerCartBox.innerHTML = cartTemplate;
//         }
//     }
// }
// rederCart2();
// ------------end cart--------------

// ----------breadcumb----------
const breadecumb = () => {
    const breadecumb = mainElement.querySelector('.inner-breadcumb');
    const breadecumbTemplate = `
    <div class="container ">
        <ul class="breadcumb m-0 py-3 d-flex gap-2 list-unstyled">
            <li>
                <a href="../../index.html">Trang ch·ªß</a>
            </li>
            <li>
                <i class="fas fa-angle-right"></i>
            </li>
            <li>
                <a href="#" style="color: var(--background-color-button);">ƒê·∫∑t b√†n</a>
            </li>
        </ul>
    </div>
    `;

    breadecumb.innerHTML = breadecumbTemplate;
}
breadecumb();
// ----------end breadcumb----------

// ----------section 1----------
function validateEmail(email) {
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    return emailRegex.test(email);
}

const formatDate = (date) => {
    const dateObject = new Date(date);
    const year = dateObject.getFullYear();
    const month = dateObject.getMonth() + 1;
    const day = dateObject.getDate();
    return `${day}/${month}/${year}`;
}
const section1 = () => {
    const section1 = mainElement.querySelector('.section-1');
    const section1Template = `
    <div class="container">
        <div class="row row-fix">
            <div class="col col-6 p-4"
                style="background-color: var(--background-color-primary); border-radius: 15px;">
                <div class="inner-title">
                    <img src="../../assets/images/svgImage/dish.png" alt="dish">
                    <h2>
                        Li√™n h·ªá ƒë·∫∑t b√†n
                    </h2>
                    <img src="../../assets/images/svgImage/dish.png" alt="dish" class="dish-2">
                </div>

                <div class="inner-content">
                    <form class="inner-form">
                        <fieldset class="form-group">
                            <label>T√™n c·ªßa b·∫°n:</label>
                            <input placeholder="T√™n c·ªßa b·∫°n..." type="text" required="" value=""
                                name="fullName">
                        </fieldset>
                        <fieldset class="form-group">
                            <label>Email c·ªßa b·∫°n:</label>
                            <input placeholder="Email" type="email" required="" id="email1"
                                class="form-control form-control-lg" value="" name="email">
                        </fieldset>
                        <fieldset class="form-group">
                            <label>S·ªë ƒëi·ªán tho·∫°i c·ªßa b·∫°n:</label>
                            <input placeholder="S·ªë ƒëi·ªán tho·∫°i..." type="number"
                                class="form-control form-control-lg" required="" value=""
                                name="phoneNumber">
                        </fieldset>
                        <fieldset class="form-group">
                            <label>B·∫°n c√≥ th·ªÉ ƒë·∫øn d√πng ng√†y n√†o?</label>
                            <input id="datesss" name="date" type="date" placeholder="Ch·ªçn Ng√†y"
                                data-date-format="dd MM yyyy" required="">
                        </fieldset>
                        <fieldset class="form-group">
                            <label>B·∫°n ƒëi m·∫•y ng∆∞·ªùi?</label>
                            <input placeholder="S·ªë ng∆∞·ªùi..." type="number" required="" value=""
                                name="personNumber">
                        </fieldset>
                        <fieldset class="form-group">
                            <label>Th·ªùi gian b·∫°n ƒë·∫øn?</label>
                            <input type="time" required="" value="" name="time">
                        </fieldset>
                        <p class="description">Kh√°ch mu·ªën li√™n h·ªá tr·ª±c ti·∫øp vui l√≤ng g·ªçi s·ªë ƒëi·ªán tho·∫°i: <a
                                href="tel:0353133235">0353133235</a></p>
                        <div class="submit">
                            <button type="submit" class="inner-button">ƒê·∫∑t b√†n ngay</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    `;

    if (section1) {
        section1.innerHTML = section1Template;

        const form = document.querySelector('.inner-form');

        form.addEventListener('submit', (e) => {
            e.preventDefault();

            const fullName = form.fullName.value.trim();
            const email = form.email.value.trim();
            const phoneNumber = form.phoneNumber.value.trim();
            const date = form.date.value.trim();
            const time = form.time.value.trim();
            const personNumber = parseInt(form.personNumber.value.trim(), 10);

            if (!fullName || !validateEmail(email) || !phoneNumber || !date || !time || isNaN(personNumber)) {
                alert('Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin');
                return;
            }

            const today = new Date().toISOString().split("T")[0]; // ƒê·ªãnh d·∫°ng YYYY-MM-DD
            if (new Date(date) < new Date(today)) {
                alert('Ng√†y b·∫°n ch·ªçn ƒë√£ qua r·ªìi ho·∫∑c kh√¥ng h·ª£p l·ªá'); 
                return;
            }

            if (personNumber <= 0) {
                alert('S·ªë l∆∞·ª£ng ng∆∞·ªùi ph·∫£i l·ªõn h∆°n 0');
                return;
            }

            form.reset();

            // Hi·ªÉn th·ªã popup x√°c nh·∫≠n
            const sectionPopup = document.querySelector('.section-popup');
            if (sectionPopup) {
                sectionPopup.style.display = 'block';
                sectionPopup.style.opacity = '1';
                sectionPopup.style.pointerEvents = 'auto';

                const popupBody = sectionPopup.querySelector('.inner-popup-body');
                const popupContentTemplate = `
                    <p style="font-weight: 700; margin-bottom: 20px; font-size: 18px;">
                        Th√¥ng tin ƒë·∫∑t b√†n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n! üéâ
                    </p>
                    <div class="inner-info">
                        <p><b>Xin ch√†o</b> &nbsp; <span>${fullName}</span></p>
                        <p>Ch√∫ng t√¥i r·∫•t vui ƒë∆∞·ª£c th√¥ng b√°o r·∫±ng ƒë·∫∑t b√†n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n v·ªõi th√¥ng tin sau:</p>
                        <p><b>T√™n:</b> &nbsp; <span>${fullName}</span></p>
                        <p><b>Email:</b> &nbsp; <span>${email}</span></p>
                        <p><b>S·ªë ƒëi·ªán tho·∫°i:</b> &nbsp; <span>${phoneNumber}</span></p>
                        <p><b>Ng√†y:</b> &nbsp; <span>${formatDate(date)}</span></p>
                        <p><b>Gi·ªù:</b> &nbsp; <span>${time}</span></p>
                        <p><b>S·ªë l∆∞·ª£ng ng∆∞·ªùi:</b> &nbsp; <span>${personNumber}</span></p>
                        <p>
                            <b>L∆∞u √Ω</b>: Vui l√≤ng ƒë·∫øn tr∆∞·ªõc 15 ph√∫t ƒë·ªÉ ƒë·∫£m b·∫£o tr·∫£i nghi·ªám t·ªët nh·∫•t. N·∫øu c·∫ßn thay ƒë·ªïi ho·∫∑c h·ªßy ƒë·∫∑t b√†n, 
                            vui l√≤ng li√™n h·ªá qua s·ªë 
                            <a href="tel:0353133235" style="color: var(--background-color-button);">0353133235</a>.
                        </p>
                        <p>C·∫£m ∆°n v√† h·∫πn g·∫∑p l·∫°i b·∫°n s·ªõm!</p>
                    </div>
                    <div class="inner-action">
                        <button class="inner-button">X√°c nh·∫≠n</button>
                    </div>
                `;

                popupBody.innerHTML = popupContentTemplate;

                // ƒê√≥ng popup khi nh·∫•n n√∫t "X√°c nh·∫≠n" ho·∫∑c n√∫t ƒë√≥ng
                const closePopup = () => {
                    sectionPopup.style.display = 'none';
                    sectionPopup.style.opacity = '0';
                    sectionPopup.style.pointerEvents = 'none';
                };

                popupBody.querySelector('.inner-button').addEventListener('click', closePopup);
                sectionPopup.querySelector('.inner-popup-close').addEventListener('click', closePopup);

                // NgƒÉn ch·∫∑n ƒë√≥ng popup khi b·∫•m v√†o b√™n trong n·ªôi dung
                sectionPopup.querySelector('.inner-popup').addEventListener('click', (e) => {
                    e.stopPropagation();
                });

                // ƒê√≥ng popup khi click b√™n ngo√†i
                sectionPopup.addEventListener('click', closePopup);
            }
        });

    }
}
section1();
// ----------end section 1----------